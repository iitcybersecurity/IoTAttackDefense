[Config MyApplicationConfKademlia]
description = MyOverlay test (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.lifetimeMean = 99999999s
**.initPhaseCreationInterval = 0.00001s
**.overlayType = "oversim.overlay.kademlia.KademliaModules"
**.neighborCache.enableNeighborCache = true
**.tier1Type = "oversim.applications.myapplication.MyApplicationModules"
**.targetOverlayTerminalNum = 180  #Number of overlay identities (can be a real device or fictitious identity)
**.numDevices = 29 #Number of smart devices in the smart home
**.globalStatistics.numVictimNodes= 23	#In ids-based attack, the attacker can randomly choose a subset of smart nodes to be the victims.
**.globalStatistics.addMaliciousNodePeriod= 15	#(expressed in slot cycles) time interval to add new malicious node.
**.putTemperaturePeriod = 10	#time interval to add a new temperature data in application2
**.putMotionPeriod = 10	#time interval to add a new motion data in application2
**.readTemperatureProbability = 100 #(expressed in percentage probability)Each node periodically reads from a temperature device with a given probability
**.readMotionProbability = 100 #(expressed in percentage probability)Each node periodically reads from a temperature device with a given probability
**.numMaliciousNodes= 5   #Number of malicious nodes at simulation beginning (Physical devices compromised by the attacker).
**.targetNumMaliciousNodes= 5	#Maximum number of malicious nodes during the simulation
**.groupA_nodesNumber = 0	#(Used in nodes discrediting strategy) number of nodes to be assigned to group A at beginning
**.groupB_nodesNumber = 0   #(Used in nodes discrediting strategy) number of nodes to be assigned to group B at beginning
**.numTemperatureDevices = 3   #Number of temperature devices. Each device can sample data from given sensors.
**.numMotionDevices = 3	#Number of motion devices. Each device can sample data from given sensors.
#**.tier1.application.numReplicas = 0

**.classificationSlotTime = 100     #time duration (s) of a classification cycle
##JOSANG MODEL PARAMETERS##
**.tier1.application.reputationThreshold = 0.5 
**.tier1.application.trustThreshold =0.5
**.tier1.application.beliefVar = 0.1
**.tier1.application.disbeliefVar = 0.3
**.tier1.application.reputationStrikesLimit = 3

**.maximumClassificationCycles = 100 #Maximum number of classification cycles
#SCENARIOS: scenario2 -> 2
#scenario3.1 (request dropping strategy)->31
#scenario3.2 (invalid data retrieval strategy)-> 32
#scenario4.1 (simple trust based IDS strategy)-> 41 
#scenario4.2 (invalid-votes retrieval strategy)-> 42
#scenario5 (nodes discrediting strategy) -> 5 
#scenario6 (nodes discrediting + request dropping strategy) -> 6
**.scenario = 2
**.isSybilEnabled = false  ##Enables sybil attack in scenario 2. 
**.tier1.application.wrongClassificationProbability = 1  #(%) it represents the accuracy of IDS classifiers 
**.tier1.application.application = 3  #based on this parameter the nature of applicative data changes (openSHS environment -> 1, temperature/motion data sharing -> 2, Intrusion Detection System -> 3)


[Config Kademlia]
description = Kademlia (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.kademlia.KademliaModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 308
**.overlay.kademlia.lookupRedundantNodes = 1
**.globalStatistics.numSimNodes = 308



[Config MyApplicationConfPastry]
description = MyOverlay test (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.tier1Type = "oversim.applications.myapplication2.MyApplication2Modules"
**.overlay.overlay.enableDrops = true
**.overlay.overlay.dropChance = 0
**.tier1.application.sendPeriod = 1s
**.tier1.application.numToSend = 1
**.tier1.application.largestKey = 10
**.tier1.application.numSimNodes = 5
**.targetOverlayTerminalNum = 5

[Config Pastry]
description = Pastry (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.enableNewLeafs = false
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 30
**.globalStatistics.numSimNodes = 30
**.measureNetwInitPhase = false
**.useCommonAPIforward = true
**.neighborCache.enableNeighborCache = true




[Config MyApplicationConf]
description = MyOverlay test (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.myoverlay.MyOverlayModules"
**.tier1Type = "oversim.applications.myapplication.MyApplicationModules"
**.overlay.overlay.enableDrops = true
**.overlay.overlay.dropChance = 0
**.tier1.application.sendPeriod = 1s
**.tier1.application.numToSend = 1
**.tier1.application.largestKey = 10
**.tier1.application.numSimNodes = 5
**.targetOverlayTerminalNum = 5

[Config ChordDht]
description = Chord DHT (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.lifetimeMean = 10000s
**.measurementTime = 1000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.chord.ChordModules"
**.numTiers = 2
**.tier1Type = "oversim.applications.dht.DHTModules"
**.tier2Type = "oversim.tier2.dhttestapp.DHTTestAppModules"
**.globalObserver.globalFunctions[0].functionType = "oversim.tier2.dhttestapp.GlobalDhtTestMap"
**.globalObserver.numGlobalFunctions = 1
**.targetOverlayTerminalNum = 5
**.initPhaseCreationInterval = 0.1s
**.drawOverlayTopology = true
**.tier1*.dht.numReplica = 4
**.tier2.dhtTestApp.sendPeriod = 1s
**.tier2.dhtTestApp.numToSend = 1
**.tier2.dhtTestApp.largestKey = 10


[Config ExampleConf]
description = MyOverlay test (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.targetOverlayTerminalNum = 5
**.overlayType = "oversim.overlay.myoverlay.MyOverlayModules"
**.tier1Type = "oversim.applications.myapplication.MyApplicationModules"
**.overlay.overlay.enableDrops = true
**.overlay.overlay.dropChance = 0
**.tier1.application.sendPeriod = 1s
**.tier1.application.numToSend = 1
**.tier1.application.largestKey = 10

[Config Chord]
description = Chord (iterative, SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"

[Config ChordInet]
description = Chord (iterative, InetUnderlayNetwork)
network = oversim.underlay.inetunderlay.InetUnderlayNetwork
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
InetUnderlayNetwork.backboneRouterNum = 1
InetUnderlayNetwork.overlayAccessRouterNum = 1
InetUnderlayNetwork.accessRouterNum = 1

# IPv6 support ist broken in inet-20111118

#[Config ChordInet6]
#description = Chord (iterative, InetUnderlayNetwork6)
#network = oversim.underlay.inetunderlay.InetUnderlayNetwork6
#*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
#**.overlayType = "oversim.overlay.chord.ChordModules"
#**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
#InetUnderlayNetwork.backboneRouterNum = 1
#InetUnderlayNetwork.overlayAccessRouterNum = 1
#InetUnderlayNetwork.accessRouterNum = 1

[Config ChordReaSE]
# You need to install the ReaSE framework and change the ned-path in
# default.ini to enable ReaSE background traffic !
description = Chord (ReaSEUnderlayNetwork)
network = oversim.underlay.reaseunderlay.topologies.topology_example.ReaSEUnderlayNetwork
**.TerminalConnector.channelTypes = "oversim.underlay.reaseunderlay.topologies.topology_example.host2edge"
**.TerminalConnector.channelTypesRx = "oversim.underlay.reaseunderlay.topologies.topology_example.edge2host"
**.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
num-rngs = 5 # set num-rngs to 5 if using ReaSE framework

[Config ChordSimpleSemi]
description = Chord (semi-recursive, SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.routingType = "semi-recursive"

[Config ChordFastStab]
description = Chord (semi-recursive, SimpleUnderlayNetwork, faster stabilize)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.routingType = "semi-recursive"
**.overlay.chord.stabilizeDelay = 5s
**.overlay.chord.fixfingersDelay = 60s

[Config ChordLarge]
description = Chord (semi-recursive, SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 500s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.routingType = "semi-recursive"
**.churnGeneratorTypes = "oversim.common.NoChurn"
**.targetOverlayTerminalNum = 10000
**.initPhaseCreationInterval = 0.1s
**.debugOutput = false



[Config KademliaLarge]
description = Kademlia (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 500s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.kademlia.KademliaModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.initPhaseCreationInterval = 0.1s
**.overlay.kademlia.lookupRedundantNodes = 16
**.overlay.kademlia.s = 8
**.overlay.kademlia.k = 16
**.overlay.kademlia.lookupMerge = true
**.overlay.kademlia.lookupParallelPaths = 1
**.overlay.kademlia.lookupParallelRpcs = 1

[Config PastryLarge]
description = Pastry (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.enableNewLeafs = false
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.neighborCache.enableNeighborCache = true

[Config Bamboo]
description = Bamboo (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.measurementTime = 5000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.bamboo.BambooModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 100
**.initPhaseCreationInterval = 5s
**.neighborCache.enableNeighborCache = true

[Config BambooLarge]
description = Bamboo (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 2000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.bamboo.BambooModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.initPhaseCreationInterval = 0.1s
**.neighborCache.enableNeighborCache = true

[Config Koorde]
description = Koorde (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.koorde.KoordeModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.routingType = "iterative"

[Config KoordeLarge]
description = Koorde (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 1000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.koorde.KoordeModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.debugOutput = false

[Config Broose]
description = Broose (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.broose.BrooseModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.overlay.brooseShiftingBits = 2

[Config BrooseLarge]
description = Broose (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 1000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.broose.BrooseModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.overlay.brooseShiftingBits = 2
**.targetOverlayTerminalNum = 1000
**.initPhaseCreationInterval = 0.1s
**.debugOutput = false

[Config Accordion]
description = Accordion (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.accordion.AccordionModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"

[Config Gia]
description = Gia (SimpleUnderlayNetwork, SearchApp)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.gia.GiaModules"
**.tier1Type = "oversim.applications.giasearchapp.GIASearchAppModules"
**.targetOverlayTerminalNum = 10
**.overlay.gia.maxNeighbors = 3
**.overlay.gia.minNeighbors = 3

[Config GiaLarge]
description = Gia (SimpleUnderlayNetwork, large-scale test -> run without GUI)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.gia.GiaModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.initPhaseCreationInterval = 0.1s



[Config ChordDhtTrace]
description = Chord/DHT trace test (SimpleUnderlayNetwork)
**.overlayType = "oversim.overlay.chord.ChordModules"
**.numTiers = 2
**.tier1Type = "oversim.applications.dht.DHTModules"
**.tier2Type = "oversim.tier2.dhttestapp.DHTTestAppModules"
**.globalObserver.globalFunctions[0].functionType = "oversim.tier2.dhttestapp.GlobalDhtTestMap"
**.globalObserver.numGlobalFunctions = 1
**.tier2.dhtTestApp.testInterval = 0s
**.churnGeneratorTypes = "oversim.common.TraceChurn"
**.traceFile = "dht.trace"

[Config i3Anycast]
description = I3 Anycast over Chord (combined I3Server/I3Client, SimpleUnderlayNetwork)
**.numTiers = 2
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.i3.OverlayI3"
**.tier2Type = "oversim.applications.i3.i3Apps.I3Anycast"
**.targetOverlayTerminalNum = 6

[Config Scribe]
description = Scribe Test (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.measureNetwInitPhase = true
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.tier1Type = "oversim.applications.scribe.MulticastScribe"
**.tier2Type = "oversim.applications.almtest.ALMTestModule"
**.numTiers = 2
**.overlay*.pastry.useCommonAPIforward = true
**.overlay*.pastry.enableNewLeafs = true
**.neighborCache.enableNeighborCache = true
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.applications.almtest.MessageObserverModule"

[Config ChurnVisualization]
description = "Chord Churn Visualization"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.RandomChurn oversim.common.NoChurn"
**.overlay*.chord.routingType = "semi-recursive"
*.churnGenerator[0].targetMobilityDelay=300s
*.churnGenerator[0].targetMobilityDelay2=7s
*.churnGenerator[0].churnChangeInterval=7000s
**.globalObserver.globalStatistics.globalStatTimerInterval = 120s
*.churnGenerator[1].targetOverlayTerminalNum = 1

[Config SimMud]
description = SimMud Test (SimpleUnderlayNetwork)
**.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.measureNetwInitPhase = true
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.tier1Type = "oversim.applications.scribe.MulticastScribe"
**.tier2Type = "oversim.tier2.simmud.SimMudModules"
**.tier3Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.numTiers = 3
**.overlay*.pastry.useCommonAPIforward = true
**.overlay*.pastry.enableNewLeafs = true
**.globalObserver.globalFunctions[0].functionType = "oversim.applications.simplegameclient.GlobalCoordinatorModules"
**.globalObserver.numGlobalFunctions = 1
**.neighborCache.enableNeighborCache = true

[Config NTree]
description = NTree Test (SimpleUnderlayNetwork)
**.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.ntree.NTreeModules"
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.globalObserver.globalFunctions[0].functionType = "oversim.applications.simplegameclient.GlobalCoordinatorModules"
**.globalObserver.numGlobalFunctions = 1
**.maxChildren = 5
**.areaDimension = 200


[Config Vast]
description = VAST (SimpleUnderlayNetwork, RandomRoaming)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.vast.OverlayVast"
**.targetOverlayTerminalNum = 128
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.areaDimension = 1000.0
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.vast.GlobalVastModules"

[Config Quon]
description = Quon (SimpleUnderlayNetwork, RandomRoaming)
**.overlayType = "oversim.overlay.quon.OverlayQuon"
**.targetOverlayTerminalNum = 256
**.areaDimension = 5000.0
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.quon.GlobalQuonModules"

[Config QuonLoginCache]
description = Quon (SimpleUnderlayNetwork, RandomRoaming)
**.overlayType = "oversim.overlay.quon.OverlayQuon"
**.targetOverlayTerminalNum = 256
**.areaDimension = 5000.0
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.quon.GlobalQuonModulesLC"
**.addJoinDelay = 80ms
**.movementSpeed = 5mps

[Config QuonGroup]
description = Quon (SimpleUnderlayNetwork, GroupRoaming)
**.overlayType = "oversim.overlay.quon.OverlayQuon"
**.targetOverlayTerminalNum = 256
**.areaDimension = 5000.0
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.tier1.*.movementGenerator = "groupRoaming"
**.tier1.*.groupSize = 16
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.quon.GlobalQuonModules"

[Config QuonDynAoi]
description = Quon (SimpleUnderlayNetwork, GroupRoaming, DynamicAOI)
**.overlayType = "oversim.overlay.quon.OverlayQuon"
**.overlay.*.connectionLimit = 20
**.targetOverlayTerminalNum = 256
**.minAOIWidth = 10.0
**.areaDimension = 5000.0
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.tier1.*.movementGenerator = "groupRoaming"
**.tier1.*.groupSize = 16
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.quon.GlobalQuonModules"
**.almTest.joinGroups = false
**.neighborCache.enableNeighborCache = true
SimpleUnderlayNetwork.overlayTerminal[*].udp.jitter = 0.05
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.applications.almtest.MessageObserverModule"

[Config MyConfig]
description = MyApplication / MyOverlay (Example from the OverSim website)
**.overlayType = "oversim.overlay.myoverlay.MyOverlayModules"
**.tier1Type = "oversim.applications.myapplication.MyApplicationModules"
**.targetOverlayTerminalNum = 10
**.enableDrops = false
**.dropChance = 0
**.sendPeriod = 1s
**.numToSend = 1
**.largestKey = 10

[Config TCPExampleApp]
description = TCPExampleApp (InetUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.applications.i3.OverlayDummyModules"
**.tier1Type = "oversim.applications.tcpexampleapp.TCPExampleAppModules" 
**.targetOverlayTerminalNum = 2

include ./default.ini